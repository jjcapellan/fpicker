const FOLDERS = document.getElementById("content").getElementsByClassName("_d");
const PLACES = document.getElementById("sidebar").getElementsByClassName("sidebar-item");
const SELECTED_LABEL = document.getElementById("selected");
const BUTTON_SELECT = document.getElementById("bt-select");
const BUTTON_CANCEL = document.getElementById("bt-cancel");
const BUTTON_HIDE = document.getElementById("toggle");

window.onload = () => {
    // Removes query params
    let uri = window.location.toString();
    if (uri.indexOf("?") > 0) {
        let url = uri.substring(0, uri.indexOf("?"));
        window.history.replaceState({}, document.title, url);
    }
}

{{if .IsFilePicker}}
const FILES = document.getElementById("content").getElementsByClassName("_f");
const PICKER_URL = "{{.FilePickerUrl}}";
const SELECTED_URL = "{{.SelectedFileUrl}}";

let selected = "";
for (item of FILES) {
    item.addEventListener("click", clickFile);
};
function clickFile(evt) {
    let name = evt.currentTarget.children[1].innerHTML;
    selected = evt.currentTarget.dataset.path;
    SELECTED_LABEL.innerHTML = "<b>" + name + "</b>";
}
{{else}}
const selected = "{{.Path}}"
const PICKER_URL = "{{.FolderPickerUrl}}";
const SELECTED_URL = "{{.SelectedFolderUrl}}";
{{end}}

const root = "{{.Root}}"
const hideHiddenFiles = {{if .HideFiles}}true{{else}}false{{end}};

for (item of FOLDERS) {
    item.addEventListener("click", clickFolder);
}

for (item of PLACES) {
    item.addEventListener("click", clickPlace);
};

BUTTON_SELECT.addEventListener("click", handlerSelect);
BUTTON_CANCEL.addEventListener("click", handlerCancel);
BUTTON_HIDE.addEventListener("change", handlerHide);

function clickFolder(evt) {
    let path = evt.currentTarget.dataset.path;
    let url = PICKER_URL + "?path=" + path + "&root=" + root + "&hide=" + hideHiddenFiles;
    window.location.replace(url);
}

function clickPlace(evt) {
    let path = evt.currentTarget.dataset.path;
    let url = PICKER_URL + "?path=" + path + "&root=" + path + "&hide=" + hideHiddenFiles;
    window.location.replace(url);
}

function handlerSelect(evt) {
    const url = SELECTED_URL + "?path=" + selected;
    fetch(url, { method: 'POST' })
    .then(()=>window.close());    
}

function handlerCancel(evt) {
    window.close();
}

function handlerHide(evt) {
    let hide = evt.currentTarget.checked;
    let path = "{{.Path}}";
    const url = PICKER_URL + "?path=" + path + "&root=" + root + "&hide=" + hide;
    window.location.replace(url);
}